{"ast":null,"code":"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, RESET, MEMORY, RESETMEMORY, ADDMEMORY, memory } from './../actions';\nexport const initialState = {\n  total: 0,\n  operation: \"*\",\n  memory: 0\n};\nconst calculateResult = (num1, num2, operation) => {\n  if (num1 == 0 && operation == \"*\") {\n    return num2;\n  }\n  switch (operation) {\n    case \"+\":\n      return num1 + num2;\n    case \"*\":\n      return num1 * num2;\n    case \"-\":\n      return num1 - num2;\n    default:\n      return;\n  }\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ONE:\n      return {\n        ...state,\n        total: state.total + 1\n      };\n    case APPLY_NUMBER:\n      return {\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation)\n      };\n    case CHANGE_OPERATION:\n      return {\n        ...state,\n        operation: action.payload\n      };\n    case RESET:\n      return {\n        ...state,\n        total: initialState.total,\n        operation: initialState.operation,\n        memory: initialState.memory\n      };\n    case MEMORY:\n      return {\n        ...state,\n        memory: state.total\n      };\n    case RESETMEMORY:\n      return {\n        ...state,\n        memory: 0\n      };\n    case ADDMEMORY:\n      return {\n        ...state,\n        total: state.total + memory\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_ONE","APPLY_NUMBER","CHANGE_OPERATION","RESET","MEMORY","RESETMEMORY","ADDMEMORY","memory","initialState","total","operation","calculateResult","num1","num2","reducer","state","action","type","payload"],"sources":["C:/Users/mcg/fsweb-s10g1-reducer-calculator/src/reducers/index.js"],"sourcesContent":["import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, RESET,MEMORY,RESETMEMORY,ADDMEMORY, memory } from './../actions';\r\n\r\nexport const initialState = {\r\n  total: 0,\r\n  operation: \"*\",\r\n  memory: 0\r\n}\r\n\r\nconst calculateResult = (num1, num2, operation) => {\r\n  if(num1==0 && operation==\"*\"){\r\n    return num2;\r\n  }\r\n  switch (operation) {\r\n    case (\"+\"):\r\n      return num1 + num2;\r\n    case (\"*\"):\r\n      return num1 * num2;\r\n    case (\"-\"):\r\n      return num1 - num2;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case (ADD_ONE):\r\n      return ({\r\n        ...state,\r\n        total: state.total + 1\r\n      });\r\n\r\n    case (APPLY_NUMBER):\r\n      return ({\r\n        ...state,\r\n        total: calculateResult(state.total, action.payload, state.operation)\r\n      });\r\n\r\n    case (CHANGE_OPERATION):\r\n      return ({\r\n        ...state,\r\n        operation: action.payload\r\n      });\r\n      case (RESET):\r\n      return ({\r\n        ...state,\r\n        total: initialState.total,\r\n        operation: initialState.operation,\r\n        memory: initialState.memory\r\n      });\r\n      case (MEMORY):\r\n      return ({\r\n        ...state,\r\n        memory: state.total\r\n      });\r\n      case (RESETMEMORY):\r\n      return ({\r\n        ...state,\r\n        memory: 0\r\n      });\r\n      case (ADDMEMORY):\r\n      return ({\r\n        ...state,\r\n        total: state.total+memory\r\n      });\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,KAAK,EAACC,MAAM,EAACC,WAAW,EAACC,SAAS,EAAEC,MAAM,QAAQ,cAAc;AAElH,OAAO,MAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,GAAG;EACdH,MAAM,EAAE;AACV,CAAC;AAED,MAAMI,eAAe,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEH,SAAS,KAAK;EACjD,IAAGE,IAAI,IAAE,CAAC,IAAIF,SAAS,IAAE,GAAG,EAAC;IAC3B,OAAOG,IAAI;EACb;EACA,QAAQH,SAAS;IACf,KAAM,GAAG;MACP,OAAOE,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB;MACE;EACJ;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAMjB,OAAO;MACX,OAAQ;QACN,GAAGe,KAAK;QACRN,KAAK,EAAEM,KAAK,CAACN,KAAK,GAAG;MACvB,CAAC;IAEH,KAAMR,YAAY;MAChB,OAAQ;QACN,GAAGc,KAAK;QACRN,KAAK,EAAEE,eAAe,CAACI,KAAK,CAACN,KAAK,EAAEO,MAAM,CAACE,OAAO,EAAEH,KAAK,CAACL,SAAS;MACrE,CAAC;IAEH,KAAMR,gBAAgB;MACpB,OAAQ;QACN,GAAGa,KAAK;QACRL,SAAS,EAAEM,MAAM,CAACE;MACpB,CAAC;IACD,KAAMf,KAAK;MACX,OAAQ;QACN,GAAGY,KAAK;QACRN,KAAK,EAAED,YAAY,CAACC,KAAK;QACzBC,SAAS,EAAEF,YAAY,CAACE,SAAS;QACjCH,MAAM,EAAEC,YAAY,CAACD;MACvB,CAAC;IACD,KAAMH,MAAM;MACZ,OAAQ;QACN,GAAGW,KAAK;QACRR,MAAM,EAAEQ,KAAK,CAACN;MAChB,CAAC;IACD,KAAMJ,WAAW;MACjB,OAAQ;QACN,GAAGU,KAAK;QACRR,MAAM,EAAE;MACV,CAAC;IACD,KAAMD,SAAS;MACf,OAAQ;QACN,GAAGS,KAAK;QACRN,KAAK,EAAEM,KAAK,CAACN,KAAK,GAACF;MACrB,CAAC;IAGH;MACE,OAAOQ,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}